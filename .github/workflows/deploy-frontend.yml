name: Deploy Frontend to Railway

on:
  workflow_dispatch:
    inputs:
      git_tag:
        description: 'Git Tag ที่ต้องการ deploy (เช่น v1.0.0)'
        required: true
        type: string

      app_env:
        description: 'Target Environment (SIT, UAT, PROD)'
        required: true
        type: choice
        options: [SIT, UAT, PROD]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.app_env }}  # เลือก Environment ของ GitHub (SIT/UAT/PROD)

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Copy environment file
      - name: Copy .env file
        run: |
          case "${{ inputs.app_env }}" in
            SIT) cp .env.sit .env ;;
            UAT) cp .env.uat .env ;;
            PROD) cp .env.prod .env ;;
            *) echo "Unknown environment" && exit 1 ;;
          esac

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=my-frontend:${{ inputs.app_env }}-${{ inputs.git_tag }}
          docker build -t $IMAGE_TAG .

      # 4. Install latest Railway CLI
      - name: Install Railway CLI
        run: curl -sSL https://railway.app/install.sh | sh

      # 5. Set Railway environment variables from Environment secrets
      - name: Set Railway environment variables
        run: |
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN }}" >> $GITHUB_ENV
          echo "RAILWAY_SERVICE_ID=${{ secrets.RAILWAY_SERVICE_ID }}" >> $GITHUB_ENV

      # 6. Deploy to Railway
      - name: Deploy to Railway
        run: |
          IMAGE_TAG=my-frontend:${{ inputs.git_tag }}
          echo "Deploying Frontend version ${{ inputs.git_tag }} to Railway Service ID $RAILWAY_SERVICE_ID..."
          railway up --service $RAILWAY_SERVICE_ID --detach
